<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.23.0209.1653                               -->
<workbook original-version='18.1' source-build='2022.4.1 (20224.23.0209.1653)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N customers ' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
      <column caption='Measure values' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
        <calculation class='tableau' formula='&quot;Sales&quot;' />
        <members>
          <member value='&quot;Discount&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Quantity&quot;' />
          <member value='&quot;Sales&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='SampleSuperstore-191212-222546' inline='true' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore-191212-222546' name='excel-direct.0stsb6i1homrrf13w4vqu1d95rqm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:/datasets/SampleSuperstore-191212-222546.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0stsb6i1homrrf13w4vqu1d95rqm' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0stsb6i1homrrf13w4vqu1d95rqm' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4493F69B96294E11B4CD968F38AB564E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='no of orders' datatype='integer' name='[Calculation_327636875571769344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Order ID])' />
      </column>
      <column caption='avg order value' datatype='real' name='[Calculation_327636875572183041]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])/[Calculation_327636875571769344]' />
      </column>
      <column caption='furniture segment' datatype='string' name='[Calculation_327636875575926786]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Sub-Category] = &apos;Bookcases&apos;&#13;&#10;OR [Sub-Category] = &apos;Chairs&apos;&#13;&#10;OR [Sub-Category] = &apos;Furnishings&apos;&#13;&#10;OR [Sub-Category] = &apos;Tables&apos;&#13;&#10;OR [Sub-Category] = &apos;Storage&apos;&#13;&#10;THEN &quot;Furniture Segment&quot;&#13;&#10;ELSE &quot;Other Segment&quot;&#13;&#10;END' />
      </column>
      <column caption='shipping time' datatype='integer' name='[Calculation_377176471285501952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
      </column>
      <column caption='Name of Measures' datatype='real' name='[Calculation_399694471029682176]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &quot;Discount&quot; THEN [Discount]&#13;&#10;WHEN &quot;Profit&quot; THEN [Profit]&#13;&#10;WHEN &quot;Quantity&quot; THEN [Quantity]&#13;&#10;WHEN &quot;Sales&quot; THEN [Sales]&#13;&#10;END' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_549439157811544064]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Quantity (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Quantity]' peg='0' size='1.77' />
      </column>
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_4493F69B96294E11B4CD968F38AB564E]' role='measure' type='quantitative' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_549439157811544064]' derivation='User' name='[usr:Calculation_549439157811544064:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.117ebsv0pkdn1i1cm8cmt061ybws].[usr:Calculation_549439157811544064:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Measure values' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_4493F69B96294E11B4CD968F38AB564E'>
            <properties context=''>
              <relation connection='excel-direct.0stsb6i1homrrf13w4vqu1d95rqm' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_CE374FAB59474A6CB85CBCBEE66D2381]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='histgram' />
      <command command='tsc:brush'>
        <param name='special-fields' value='date-time' />
        <param name='target' value='histgram' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Parameters'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Sum of Sales for each Index broken down by Customer Name. 
You can use the parameter (Top N customers) to view only the top N number of customers.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N customers ' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column caption='Index' datatype='integer' name='[Calculation_549439157811544064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_549439157811544064]' derivation='User' name='[usr:Calculation_549439157811544064:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Customer Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Customer Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Sean Miller&quot;</bucket>
              <bucket>&quot;Tamara Chand&quot;</bucket>
              <bucket>&quot;Raymond Buch&quot;</bucket>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
              <bucket>&quot;Adrian Barton&quot;</bucket>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
              <bucket>&quot;Christopher Conant&quot;</bucket>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
              <bucket>&quot;Greg Tran&quot;</bucket>
              <bucket>&quot;Becky Martin&quot;</bucket>
              <bucket>&quot;Seth Vernon&quot;</bucket>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
              <bucket>&quot;Bill Shonely&quot;</bucket>
              <bucket>&quot;Edward Hooks&quot;</bucket>
              <bucket>&quot;John Lee&quot;</bucket>
              <bucket>&quot;Grant Thornton&quot;</bucket>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
              <bucket>&quot;Peter Fuller&quot;</bucket>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
              <bucket>&quot;Joe Elijah&quot;</bucket>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
              <bucket>&quot;Pete Kriz&quot;</bucket>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
              <bucket>&quot;Karen Daniels&quot;</bucket>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
              <bucket>&quot;Harry Marie&quot;</bucket>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
              <bucket>&quot;Sean Braxton&quot;</bucket>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
              <bucket>&quot;Joseph Holt&quot;</bucket>
              <bucket>&quot;Nora Preis&quot;</bucket>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
              <bucket>&quot;Jim Epp&quot;</bucket>
              <bucket>&quot;Jane Waco&quot;</bucket>
              <bucket>&quot;Lena Creighton&quot;</bucket>
              <bucket>&quot;John Murray&quot;</bucket>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
              <bucket>&quot;Rick Wilson&quot;</bucket>
              <bucket>&quot;Brian Moss&quot;</bucket>
              <bucket>&quot;Paul Prost&quot;</bucket>
              <bucket>&quot;Natalie Webber&quot;</bucket>
              <bucket>&quot;Dean percer&quot;</bucket>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
              <bucket>&quot;Joel Eaton&quot;</bucket>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
              <bucket>&quot;Andy Reiter&quot;</bucket>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
              <bucket>&quot;Grace Kelly&quot;</bucket>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
              <bucket>&quot;Sarah Brown&quot;</bucket>
              <bucket>&quot;James Galang&quot;</bucket>
              <bucket>&quot;Darrin Martin&quot;</bucket>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
              <bucket>&quot;Max Jones&quot;</bucket>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
              <bucket>&quot;Rob Lucas&quot;</bucket>
              <bucket>&quot;William Brown&quot;</bucket>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
              <bucket>&quot;Quincy Jones&quot;</bucket>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
              <bucket>&quot;Shahid Collister&quot;</bucket>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
              <bucket>&quot;Robert Marley&quot;</bucket>
              <bucket>&quot;Keith Herrera&quot;</bucket>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
              <bucket>&quot;Christine Phan&quot;</bucket>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
              <bucket>&quot;Anne McFarland&quot;</bucket>
              <bucket>&quot;Ross Baird&quot;</bucket>
              <bucket>&quot;Katherine Murray&quot;</bucket>
              <bucket>&quot;Alex Avila&quot;</bucket>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
              <bucket>&quot;Naresj Patel&quot;</bucket>
              <bucket>&quot;Amy Cox&quot;</bucket>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
              <bucket>&quot;Emily Phan&quot;</bucket>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
              <bucket>&quot;Luke Weiss&quot;</bucket>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
              <bucket>&quot;Thomas Seio&quot;</bucket>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
              <bucket>&quot;Mitch Webber&quot;</bucket>
              <bucket>&quot;Tom Prescott&quot;</bucket>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
              <bucket>&quot;Harold Ryan&quot;</bucket>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
              <bucket>&quot;Resi Pölking&quot;</bucket>
              <bucket>&quot;Lena Radford&quot;</bucket>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
              <bucket>&quot;Ivan Liston&quot;</bucket>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
              <bucket>&quot;Irene Maddox&quot;</bucket>
              <bucket>&quot;Ted Trevino&quot;</bucket>
              <bucket>&quot;Kunst Miller&quot;</bucket>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
              <bucket>&quot;Alan Hwang&quot;</bucket>
              <bucket>&quot;Dean Katz&quot;</bucket>
              <bucket>&quot;Russell Applegate&quot;</bucket>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
              <bucket>&quot;Jim Kriz&quot;</bucket>
              <bucket>&quot;Bart Watters&quot;</bucket>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
              <bucket>&quot;Rick Bensley&quot;</bucket>
              <bucket>&quot;Erin Smith&quot;</bucket>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
              <bucket>&quot;Kean Thornton&quot;</bucket>
              <bucket>&quot;Sample Company A&quot;</bucket>
              <bucket>&quot;Eugene Moren&quot;</bucket>
              <bucket>&quot;Dave Brooks&quot;</bucket>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
              <bucket>&quot;Mark Cousins&quot;</bucket>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
              <bucket>&quot;Katrina Willman&quot;</bucket>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
              <bucket>&quot;Arianne Irving&quot;</bucket>
              <bucket>&quot;Scot Coram&quot;</bucket>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
              <bucket>&quot;Steven Roelle&quot;</bucket>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
              <bucket>&quot;Matt Abelman&quot;</bucket>
              <bucket>&quot;Sung Pak&quot;</bucket>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
              <bucket>&quot;Rick Duston&quot;</bucket>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
              <bucket>&quot;Frank Hawley&quot;</bucket>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
              <bucket>&quot;Bill Eplett&quot;</bucket>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
              <bucket>&quot;Gary Hwang&quot;</bucket>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
              <bucket>&quot;Peter McVee&quot;</bucket>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
              <bucket>&quot;Denise Monton&quot;</bucket>
              <bucket>&quot;Frank Preis&quot;</bucket>
              <bucket>&quot;Susan Pistek&quot;</bucket>
              <bucket>&quot;Craig Molinari&quot;</bucket>
              <bucket>&quot;Michael Paige&quot;</bucket>
              <bucket>&quot;Sean Christensen&quot;</bucket>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
              <bucket>&quot;Luke Foster&quot;</bucket>
              <bucket>&quot;Pierre Wener&quot;</bucket>
              <bucket>&quot;George Ashbrook&quot;</bucket>
              <bucket>&quot;Ken Heidel&quot;</bucket>
              <bucket>&quot;Chris Cortes&quot;</bucket>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
              <bucket>&quot;Nora Paige&quot;</bucket>
              <bucket>&quot;Kelly Collister&quot;</bucket>
              <bucket>&quot;Fred Chung&quot;</bucket>
              <bucket>&quot;Bill Stewart&quot;</bucket>
              <bucket>&quot;John Stevenson&quot;</bucket>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
              <bucket>&quot;Annie Thurman&quot;</bucket>
              <bucket>&quot;Olvera Toch&quot;</bucket>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
              <bucket>&quot;Michael Chen&quot;</bucket>
              <bucket>&quot;Michael Moore&quot;</bucket>
              <bucket>&quot;Carol Adams&quot;</bucket>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
              <bucket>&quot;Frank Merwin&quot;</bucket>
              <bucket>&quot;Scott Cohen&quot;</bucket>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
              <bucket>&quot;Ben Peterman&quot;</bucket>
              <bucket>&quot;Liz Preis&quot;</bucket>
              <bucket>&quot;Christopher Schild&quot;</bucket>
              <bucket>&quot;Ed Braxton&quot;</bucket>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
              <bucket>&quot;Rick Hansen&quot;</bucket>
              <bucket>&quot;Thomas Boland&quot;</bucket>
              <bucket>&quot;Gary McGarr&quot;</bucket>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
              <bucket>&quot;Erica Smith&quot;</bucket>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
              <bucket>&quot;Anna Gayman&quot;</bucket>
              <bucket>&quot;Emily Ducich&quot;</bucket>
              <bucket>&quot;Pauline Webber&quot;</bucket>
              <bucket>&quot;Sarah Foster&quot;</bucket>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
              <bucket>&quot;Sam Craven&quot;</bucket>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
              <bucket>&quot;Dan Campbell&quot;</bucket>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
              <bucket>&quot;Dennis Kane&quot;</bucket>
              <bucket>&quot;Katharine Harms&quot;</bucket>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
              <bucket>&quot;Rick Reed&quot;</bucket>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
              <bucket>&quot;Brian Stugart&quot;</bucket>
              <bucket>&quot;Rob Williams&quot;</bucket>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
              <bucket>&quot;Adam Hart&quot;</bucket>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
              <bucket>&quot;Carol Triggs&quot;</bucket>
              <bucket>&quot;Edward Becker&quot;</bucket>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
              <bucket>&quot;Mark Packer&quot;</bucket>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
              <bucket>&quot;Brian Thompson&quot;</bucket>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
              <bucket>&quot;Greg Matthias&quot;</bucket>
              <bucket>&quot;Janet Martin&quot;</bucket>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
              <bucket>&quot;Karen Bern&quot;</bucket>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
              <bucket>&quot;Toby Gnade&quot;</bucket>
              <bucket>&quot;Kean Takahito&quot;</bucket>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
              <bucket>&quot;David Bremer&quot;</bucket>
              <bucket>&quot;Noel Staavos&quot;</bucket>
              <bucket>&quot;Tamara Manning&quot;</bucket>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
              <bucket>&quot;Liz Thompson&quot;</bucket>
              <bucket>&quot;Becky Castell&quot;</bucket>
              <bucket>&quot;Julie Kriz&quot;</bucket>
              <bucket>&quot;Shaun Weien&quot;</bucket>
              <bucket>&quot;Maris LaWare&quot;</bucket>
              <bucket>&quot;Rob Dowd&quot;</bucket>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
              <bucket>&quot;Neil Ducich&quot;</bucket>
              <bucket>&quot;Meg Tillman&quot;</bucket>
              <bucket>&quot;Barry Französisch&quot;</bucket>
              <bucket>&quot;David Smith&quot;</bucket>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
              <bucket>&quot;Chuck Clark&quot;</bucket>
              <bucket>&quot;Craig Carroll&quot;</bucket>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
              <bucket>&quot;Linda Southworth&quot;</bucket>
              <bucket>&quot;Darren Budd&quot;</bucket>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
              <bucket>&quot;Troy Staebel&quot;</bucket>
              <bucket>&quot;Gary Hansen&quot;</bucket>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
              <bucket>&quot;Trudy Brown&quot;</bucket>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
              <bucket>&quot;John Castell&quot;</bucket>
              <bucket>&quot;Philip Fox&quot;</bucket>
              <bucket>&quot;Emily Burns&quot;</bucket>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
              <bucket>&quot;Michelle Moray&quot;</bucket>
              <bucket>&quot;Ken Black&quot;</bucket>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
              <bucket>&quot;Marc Crier&quot;</bucket>
              <bucket>&quot;John Lucas&quot;</bucket>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
              <bucket>&quot;Justin Ellison&quot;</bucket>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
              <bucket>&quot;Frank Olsen&quot;</bucket>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
              <bucket>&quot;Richard Bierner&quot;</bucket>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
              <bucket>&quot;Dave Kipp&quot;</bucket>
              <bucket>&quot;Christina Anderson&quot;</bucket>
              <bucket>&quot;Logan Currie&quot;</bucket>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
              <bucket>&quot;Helen Andreada&quot;</bucket>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
              <bucket>&quot;Steve Chapman&quot;</bucket>
              <bucket>&quot;Neola Schneider&quot;</bucket>
              <bucket>&quot;Beth Thompson&quot;</bucket>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
              <bucket>&quot;Mary Zewe&quot;</bucket>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
              <bucket>&quot;Deanra Eno&quot;</bucket>
              <bucket>&quot;Corey Catlett&quot;</bucket>
              <bucket>&quot;Ann Chong&quot;</bucket>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
              <bucket>&quot;Fred McMath&quot;</bucket>
              <bucket>&quot;Julia Barnett&quot;</bucket>
              <bucket>&quot;Joy Smith&quot;</bucket>
              <bucket>&quot;Don Jones&quot;</bucket>
              <bucket>&quot;Amy Hunt&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
              <bucket>&quot;Beth Paige&quot;</bucket>
              <bucket>&quot;Charles Crestani&quot;</bucket>
              <bucket>&quot;Nat Carroll&quot;</bucket>
              <bucket>&quot;Filia McAdams&quot;</bucket>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
              <bucket>&quot;George Zrebassa&quot;</bucket>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
              <bucket>&quot;Bart Pistole&quot;</bucket>
              <bucket>&quot;Matt Collister&quot;</bucket>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
              <bucket>&quot;David Flashing&quot;</bucket>
              <bucket>&quot;Xylona Preis&quot;</bucket>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
              <bucket>&quot;Nick Radford&quot;</bucket>
              <bucket>&quot;Jack Garza&quot;</bucket>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
              <bucket>&quot;Craig Leslie&quot;</bucket>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
              <bucket>&quot;Dean Braden&quot;</bucket>
              <bucket>&quot;Chris McAfee&quot;</bucket>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
              <bucket>&quot;Fred Harton&quot;</bucket>
              <bucket>&quot;Craig Carreira&quot;</bucket>
              <bucket>&quot;Bobby Elias&quot;</bucket>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
              <bucket>&quot;Matt Connell&quot;</bucket>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
              <bucket>&quot;Ken Dana&quot;</bucket>
              <bucket>&quot;Tony Sayre&quot;</bucket>
              <bucket>&quot;Jason Gross&quot;</bucket>
              <bucket>&quot;Laurel Workman&quot;</bucket>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
              <bucket>&quot;Nathan Cano&quot;</bucket>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
              <bucket>&quot;Dave Poirier&quot;</bucket>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
              <bucket>&quot;Maya Herman&quot;</bucket>
              <bucket>&quot;Janet Lee&quot;</bucket>
              <bucket>&quot;Justin Ritter&quot;</bucket>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
              <bucket>&quot;Bill Tyler&quot;</bucket>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
              <bucket>&quot;Roy Phan&quot;</bucket>
              <bucket>&quot;Theresa Swint&quot;</bucket>
              <bucket>&quot;Helen Abelman&quot;</bucket>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
              <bucket>&quot;Neoma Murray&quot;</bucket>
              <bucket>&quot;John Dryer&quot;</bucket>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
              <bucket>&quot;Duane Noonan&quot;</bucket>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
              <bucket>&quot;Max Ludwig&quot;</bucket>
              <bucket>&quot;Roger Barcio&quot;</bucket>
              <bucket>&quot;Tom Stivers&quot;</bucket>
              <bucket>&quot;Art Ferguson&quot;</bucket>
              <bucket>&quot;Carlos Daly&quot;</bucket>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
              <bucket>&quot;Denny Joy&quot;</bucket>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
              <bucket>&quot;Doug Bickford&quot;</bucket>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
              <bucket>&quot;Nona Balk&quot;</bucket>
              <bucket>&quot;Scott Williamson&quot;</bucket>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
              <bucket>&quot;Christy Brittain&quot;</bucket>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
              <bucket>&quot;Jay Fein&quot;</bucket>
              <bucket>&quot;Max Engle&quot;</bucket>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
              <bucket>&quot;Shaun Chance&quot;</bucket>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
              <bucket>&quot;Skye Norling&quot;</bucket>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
              <bucket>&quot;Emily Grady&quot;</bucket>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
              <bucket>&quot;Noah Childs&quot;</bucket>
              <bucket>&quot;Janet Molinari&quot;</bucket>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
              <bucket>&quot;Andrew Allen&quot;</bucket>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
              <bucket>&quot;Monica Federle&quot;</bucket>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
              <bucket>&quot;Ben Wallace&quot;</bucket>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
              <bucket>&quot;Adrian Hane&quot;</bucket>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
              <bucket>&quot;Brad Eason&quot;</bucket>
              <bucket>&quot;Denny Blanton&quot;</bucket>
              <bucket>&quot;Julie Prescott&quot;</bucket>
              <bucket>&quot;Tracy Zic&quot;</bucket>
              <bucket>&quot;Becky Pak&quot;</bucket>
              <bucket>&quot;Darren Koutras&quot;</bucket>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
              <bucket>&quot;Ryan Akin&quot;</bucket>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
              <bucket>&quot;Candace McMahon&quot;</bucket>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
              <bucket>&quot;Chad McGuire&quot;</bucket>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
              <bucket>&quot;Erica Bern&quot;</bucket>
              <bucket>&quot;Anne Pryor&quot;</bucket>
              <bucket>&quot;Annie Zypern&quot;</bucket>
              <bucket>&quot;Maurice Satty&quot;</bucket>
              <bucket>&quot;Tim Brockman&quot;</bucket>
              <bucket>&quot;Craig Reiter&quot;</bucket>
              <bucket>&quot;Alan Haines&quot;</bucket>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
              <bucket>&quot;Mike Caudle&quot;</bucket>
              <bucket>&quot;James Lanier&quot;</bucket>
              <bucket>&quot;Karl Braun&quot;</bucket>
              <bucket>&quot;George Bell&quot;</bucket>
              <bucket>&quot;Odella Nelson&quot;</bucket>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
              <bucket>&quot;Ann Blume&quot;</bucket>
              <bucket>&quot;John Grady&quot;</bucket>
              <bucket>&quot;Dan Lawera&quot;</bucket>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
              <bucket>&quot;Parhena Norris&quot;</bucket>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
              <bucket>&quot;Philip Brown&quot;</bucket>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
              <bucket>&quot;Raymond Messe&quot;</bucket>
              <bucket>&quot;Paul Knutson&quot;</bucket>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
              <bucket>&quot;Julia West&quot;</bucket>
              <bucket>&quot;Mick Brown&quot;</bucket>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
              <bucket>&quot;Christine Abelman&quot;</bucket>
              <bucket>&quot;Roger Demir&quot;</bucket>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
              <bucket>&quot;Don Miller&quot;</bucket>
              <bucket>&quot;Gene Hale&quot;</bucket>
              <bucket>&quot;Sarah Bern&quot;</bucket>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
              <bucket>&quot;Bryan Mills&quot;</bucket>
              <bucket>&quot;Barry Franz&quot;</bucket>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
              <bucket>&quot;Dario Medina&quot;</bucket>
              <bucket>&quot;Michelle Tran&quot;</bucket>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
              <bucket>&quot;Sibella Parks&quot;</bucket>
              <bucket>&quot;Matt Collins&quot;</bucket>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
              <bucket>&quot;Corey-Lock&quot;</bucket>
              <bucket>&quot;Denny Ordway&quot;</bucket>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
              <bucket>&quot;Cari Sayre&quot;</bucket>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
              <bucket>&quot;Stuart Van&quot;</bucket>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
              <bucket>&quot;Liz Willingham&quot;</bucket>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
              <bucket>&quot;Gene McClure&quot;</bucket>
              <bucket>&quot;Steve Carroll&quot;</bucket>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
              <bucket>&quot;Tony Chapman&quot;</bucket>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
              <bucket>&quot;Michael Grace&quot;</bucket>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
              <bucket>&quot;Patrick Jones&quot;</bucket>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
              <bucket>&quot;Jack Lebron&quot;</bucket>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
              <bucket>&quot;Debra Catini&quot;</bucket>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
              <bucket>&quot;Jim Radford&quot;</bucket>
              <bucket>&quot;Duane Benoit&quot;</bucket>
              <bucket>&quot;Claire Gute&quot;</bucket>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
              <bucket>&quot;Carl Weiss&quot;</bucket>
              <bucket>&quot;Jim Sink&quot;</bucket>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
              <bucket>&quot;Alan Barnes&quot;</bucket>
              <bucket>&quot;Tony Molinari&quot;</bucket>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
              <bucket>&quot;Scot Wooten&quot;</bucket>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
              <bucket>&quot;David Wiener&quot;</bucket>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
              <bucket>&quot;Pauline Chand&quot;</bucket>
              <bucket>&quot;David Philippe&quot;</bucket>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
              <bucket>&quot;Phillina Ober&quot;</bucket>
              <bucket>&quot;Allen Armold&quot;</bucket>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
              <bucket>&quot;Alex Russell&quot;</bucket>
              <bucket>&quot;Darren Powers&quot;</bucket>
              <bucket>&quot;Duane Huffman&quot;</bucket>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
              <bucket>&quot;Tiffany House&quot;</bucket>
              <bucket>&quot;Sean Wendt&quot;</bucket>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
              <bucket>&quot;Randy Bradley&quot;</bucket>
              <bucket>&quot;Lynn Smith&quot;</bucket>
              <bucket>&quot;Bruce Geld&quot;</bucket>
              <bucket>&quot;Victor Preis&quot;</bucket>
              <bucket>&quot;Ken Brennan&quot;</bucket>
              <bucket>&quot;Barry Pond&quot;</bucket>
              <bucket>&quot;Toby Swindell&quot;</bucket>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
              <bucket>&quot;Roy Collins&quot;</bucket>
              <bucket>&quot;Sung Shariari&quot;</bucket>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
              <bucket>&quot;Rachel Payne&quot;</bucket>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
              <bucket>&quot;Roy Französisch&quot;</bucket>
              <bucket>&quot;Eric Barreto&quot;</bucket>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
              <bucket>&quot;Eric Murdock&quot;</bucket>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
              <bucket>&quot;Evan Henry&quot;</bucket>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
              <bucket>&quot;Chad Sievert&quot;</bucket>
              <bucket>&quot;Harold Engle&quot;</bucket>
              <bucket>&quot;Sally Knutson&quot;</bucket>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
              <bucket>&quot;Art Foster&quot;</bucket>
              <bucket>&quot;Julie Creighton&quot;</bucket>
              <bucket>&quot;Michael Stewart&quot;</bucket>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
              <bucket>&quot;Todd Boyes&quot;</bucket>
              <bucket>&quot;Ann Steele&quot;</bucket>
              <bucket>&quot;Erica Hackney&quot;</bucket>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
              <bucket>&quot;Brendan Murry&quot;</bucket>
              <bucket>&quot;David Kendrick&quot;</bucket>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
              <bucket>&quot;Harry Greene&quot;</bucket>
              <bucket>&quot;Michael Granlund&quot;</bucket>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
              <bucket>&quot;Steven Ward&quot;</bucket>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
              <bucket>&quot;Dorris liebe&quot;</bucket>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
              <bucket>&quot;Tracy Collins&quot;</bucket>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
              <bucket>&quot;Angele Hood&quot;</bucket>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
              <bucket>&quot;Peter Bühler&quot;</bucket>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
              <bucket>&quot;Toby Ritter&quot;</bucket>
              <bucket>&quot;Alex Grayson&quot;</bucket>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
              <bucket>&quot;Bryan Davis&quot;</bucket>
              <bucket>&quot;Anna Chung&quot;</bucket>
              <bucket>&quot;Anthony Witt&quot;</bucket>
              <bucket>&quot;Lori Olson&quot;</bucket>
              <bucket>&quot;Joy Bell-&quot;</bucket>
              <bucket>&quot;Carol Darley&quot;</bucket>
              <bucket>&quot;Mathew Reese&quot;</bucket>
              <bucket>&quot;Astrea Jones&quot;</bucket>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
              <bucket>&quot;Maria Zettner&quot;</bucket>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
              <bucket>&quot;Alan Shonely&quot;</bucket>
              <bucket>&quot;Brian Derr&quot;</bucket>
              <bucket>&quot;Neil Knudson&quot;</bucket>
              <bucket>&quot;Carlos Meador&quot;</bucket>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
              <bucket>&quot;John Huston&quot;</bucket>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
              <bucket>&quot;Andy Yotov&quot;</bucket>
              <bucket>&quot;Corey Roper&quot;</bucket>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
              <bucket>&quot;Erin Creighton&quot;</bucket>
              <bucket>&quot;Khloe Miller&quot;</bucket>
              <bucket>&quot;Kelly Williams&quot;</bucket>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
              <bucket>&quot;Shui Tom&quot;</bucket>
              <bucket>&quot;Vivek Grady&quot;</bucket>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
              <bucket>&quot;Brad Thomas&quot;</bucket>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
              <bucket>&quot;Barry Weirich&quot;</bucket>
              <bucket>&quot;Joy Daniels&quot;</bucket>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
              <bucket>&quot;Neil Französisch&quot;</bucket>
              <bucket>&quot;Melanie Seite&quot;</bucket>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
              <bucket>&quot;Heather Jas&quot;</bucket>
              <bucket>&quot;Don Weiss&quot;</bucket>
              <bucket>&quot;Larry Tron&quot;</bucket>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
              <bucket>&quot;Jill Matthias&quot;</bucket>
              <bucket>&quot;Chuck Magee&quot;</bucket>
              <bucket>&quot;Larry Hughes&quot;</bucket>
              <bucket>&quot;Sung Chung&quot;</bucket>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
              <bucket>&quot;Bart Folk&quot;</bucket>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
              <bucket>&quot;Brad Norvell&quot;</bucket>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
              <bucket>&quot;Sally Matthias&quot;</bucket>
              <bucket>&quot;Paul Lucas&quot;</bucket>
              <bucket>&quot;Guy Phonely&quot;</bucket>
              <bucket>&quot;Erin Mull&quot;</bucket>
              <bucket>&quot;Guy Thornton&quot;</bucket>
              <bucket>&quot;Robert Barroso&quot;</bucket>
              <bucket>&quot;Hilary Holden&quot;</bucket>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Pete Takahito&quot;</bucket>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
              <bucket>&quot;Michael Oakman&quot;</bucket>
              <bucket>&quot;Greg Hansen&quot;</bucket>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
              <bucket>&quot;Roland Murray&quot;</bucket>
              <bucket>&quot;Karen Seio&quot;</bucket>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
              <bucket>&quot;Adrian Shami&quot;</bucket>
              <bucket>&quot;Larry Blacks&quot;</bucket>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
              <bucket>&quot;Roy Skaria&quot;</bucket>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
              <bucket>&quot;Carl Jackson&quot;</bucket>
              <bucket>&quot;Lela Donovan&quot;</bucket>
              <bucket>&quot;Thais Sissman&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.117ebsv0pkdn1i1cm8cmt061ybws].[usr:Calculation_549439157811544064:ok] / [federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Customer Name:nk])</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{35311824-1632-4CAA-A13A-124DBC344C98}' />
    </worksheet>
    <worksheet name='aov sub category'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column caption='furniture segment' datatype='string' name='[Calculation_327636875575926786]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Sub-Category] = &apos;Bookcases&apos;&#13;&#10;OR [Sub-Category] = &apos;Chairs&apos;&#13;&#10;OR [Sub-Category] = &apos;Furnishings&apos;&#13;&#10;OR [Sub-Category] = &apos;Tables&apos;&#13;&#10;OR [Sub-Category] = &apos;Storage&apos;&#13;&#10;THEN &quot;Furniture Segment&quot;&#13;&#10;ELSE &quot;Other Segment&quot;&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_327636875575926786]' derivation='None' name='[none:Calculation_327636875575926786:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk] / [federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Calculation_327636875575926786:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{962F695F-6C62-4C68-A08B-9997E38F4B58}' />
    </worksheet>
    <worksheet name='avg order value(cal)'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column caption='no of orders' datatype='integer' name='[Calculation_327636875571769344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Order ID])' />
            </column>
            <column caption='avg order value' datatype='real' name='[Calculation_327636875572183041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales])/[Calculation_327636875571769344]' />
            </column>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_327636875571769344]' derivation='User' name='[usr:Calculation_327636875571769344:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_327636875572183041]' derivation='User' name='[usr:Calculation_327636875572183041:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.117ebsv0pkdn1i1cm8cmt061ybws].[usr:Calculation_327636875572183041:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.117ebsv0pkdn1i1cm8cmt061ybws].[usr:Calculation_327636875571769344:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{E11E01E1-6D76-4568-A7BE-44ACF25B3712}' />
    </worksheet>
    <worksheet name='bar chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' field-type='quantitative' max='346507.40670000011' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{11A64B9E-CF5B-46F5-A596-49173D17FA59}' />
    </worksheet>
    <worksheet name='bubble chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' />
              <text column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]' />
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{15C24152-F816-4117-A1AB-C3E576525B39}' />
    </worksheet>
    <worksheet name='category sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Technology&quot;</bucket>
              <bucket>&quot;Furniture&quot;</bucket>
              <bucket>&quot;Office Supplies&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{83BBE209-D2DE-4802-8A6A-1BA93E475950}' />
    </worksheet>
    <worksheet name='dual axis 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk] + [federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk])</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{C079D558-671D-4BFE-8881-3F495FA1722B}' />
    </worksheet>
    <worksheet name='dual axis 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk] + [federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk])</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{867B393A-FF3D-4210-B23D-BDD5BC88E9F4}' />
    </worksheet>
    <worksheet name='geospatial'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[Longitude (generated)]' field-type='quantitative' max='-7434483.909961924' min='-13996599.371704713' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[Latitude (generated)]' field-type='quantitative' max='6959420.3616928216' min='3110641.1499436754' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' palette='orange_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' />
              <lod column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:State:nk]' />
              <geometry column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[Latitude (generated)]</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{747B4BEB-13F3-4733-9BF8-05487585FE02}' />
    </worksheet>
    <worksheet name='histgram'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column aggregation='None' datatype='integer' name='[Quantity (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Quantity]' peg='0' size='1.77' />
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Count' name='[cnt:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity (bin)]' derivation='None' name='[none:Quantity (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Quantity (bin):ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[cnt:Quantity:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[cnt:Quantity:qk]</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Quantity (bin):ok]</cols>
        <show-full-range>
          <column>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[Quantity (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{80B29577-1BBD-4559-9F91-CA3231DA4993}' />
    </worksheet>
    <worksheet name='measures'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Dynamic measures&#10;&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>You can view each measure values on a year basis using order date columns .
You can access different measure values with the help of parameter (Measure values)</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Measure values' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column caption='Name of Measures' datatype='real' name='[Calculation_399694471029682176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &quot;Discount&quot; THEN [Discount]&#13;&#10;WHEN &quot;Profit&quot; THEN [Profit]&#13;&#10;WHEN &quot;Quantity&quot; THEN [Quantity]&#13;&#10;WHEN &quot;Sales&quot; THEN [Sales]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_399694471029682176]' derivation='Sum' name='[sum:Calculation_399694471029682176:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Calculation_399694471029682176:qk]</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{6976F07A-399E-4654-BC1A-52CA01931215}' />
    </worksheet>
    <worksheet name='order (cal)'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Quantity]' derivation='Count' name='[cnt:Quantity:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[cnt:Quantity:ok]' />
              <text column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:State:nk]' />
              <text column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[cnt:Quantity:ok]' />
              <geometry column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[Latitude (generated)]</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C7E722B3-95E3-4FD0-BCF6-0313DAADFAF7}' />
    </worksheet>
    <worksheet name='pie chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Segment:nk]' />
              <size column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BEF616A2-1DB5-4609-92B4-3DA8F17CCE22}' />
    </worksheet>
    <worksheet name='sales by city'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:City:nk]</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{F17F0326-D279-4A58-814C-D68295063A23}' />
    </worksheet>
    <worksheet name='sales/profit by states'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk]' included-values='in-range'>
            <min>-7204.3242000000027</min>
            <max>0.0</max>
          </filter>
          <slices>
            <column>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:State:nk]</column>
            <column>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Category:nk] / [federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{4B81518A-0963-43A0-A8BD-EC358FB1171E}' />
    </worksheet>
    <worksheet name='scatter  '>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk]</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{E6B60B8E-3BA1-4D87-A6FE-23B31678DFFF}' />
    </worksheet>
    <worksheet name='shipping time(cal)'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column caption='shipping time' datatype='integer' name='[Calculation_377176471285501952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_377176471285501952]' derivation='Avg' name='[avg:Calculation_377176471285501952:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='3.5' field='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[avg:Calculation_377176471285501952:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:State:nk]' />
              <text column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[avg:Calculation_377176471285501952:qk]' />
              <lod column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:State:nk]' />
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[avg:Calculation_377176471285501952:qk]' />
              <geometry column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[Latitude (generated)]</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{85CAFB94-0911-4E38-A6A5-D9B4159A942B}' />
    </worksheet>
    <worksheet name='subcategory sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk]' />
              <text column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
                <format attr='font-weight' value='bold' />
                <format attr='font-style' value='normal' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{E5598A06-CBEC-4F39-B132-4A15FDF6B12B}' />
    </worksheet>
    <worksheet name='time series (line)'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore-191212-222546' name='federated.117ebsv0pkdn1i1cm8cmt061ybws' />
          </datasources>
          <datasource-dependencies datasource='federated.117ebsv0pkdn1i1cm8cmt061ybws'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Phones&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month of Order Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.117ebsv0pkdn1i1cm8cmt061ybws].[tmn:Order Date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]</rows>
        <cols>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{7BF2E522-A1D5-4CE9-A0BB-688D1DCB7609}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='category sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4D7350C4-BF5C-41D4-AE4B-610DF5ABD946}' />
    </window>
    <window class='worksheet' name='subcategory sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{40414A19-3025-4B19-B6CE-8D7A63A18E11}' />
    </window>
    <window class='worksheet' name='sales/profit by states'>
      <cards>
        <edge name='left'>
          <strip size='180'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Profit:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FFA07C36-4528-40BC-B11B-D6D76C74085E}' />
    </window>
    <window class='worksheet' name='time series (line)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{64D8E93B-F4F2-4DB0-8179-3031EA9B6645}' />
    </window>
    <window class='worksheet' name='geospatial'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B51481C8-89C4-4F7A-A21C-7FE20FC85BE7}' />
    </window>
    <window class='worksheet' name='sales by city'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{90B9F60B-A33E-46C1-8984-C03FF05A6A20}' />
    </window>
    <window class='worksheet' name='bar chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{0C6CCF59-F907-48FF-9A67-F0208449BE67}' />
    </window>
    <window class='worksheet' name='histgram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{582ADB74-CDFA-4D8C-B169-68E7DB0FAAE5}' />
    </window>
    <window class='worksheet' name='scatter  '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{310ADDC7-0073-481F-9518-3C957DD70BE6}' />
    </window>
    <window class='worksheet' name='bubble chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{80523E1E-7AAA-4D20-BB7C-4D17D81A621F}' />
    </window>
    <window class='worksheet' name='pie chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Segment:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{62453B8F-B047-4185-9A5F-294ECCF421B2}' />
    </window>
    <window class='worksheet' maximized='true' name='dual axis 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{630C43C0-5480-43E5-AF5F-0411DF2CE34E}' />
    </window>
    <window class='worksheet' name='dual axis 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{ED20B24F-3D4B-458A-AD02-8751BBB00F68}' />
    </window>
    <window class='worksheet' name='shipping time(cal)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[avg:Calculation_377176471285501952:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{51DA21BB-F653-4CEE-8C60-29474115453E}' />
    </window>
    <window class='worksheet' name='order (cal)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.117ebsv0pkdn1i1cm8cmt061ybws].[cnt:Quantity:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2513D3AE-16DE-4222-BE47-FD5B1637D0C0}' />
    </window>
    <window class='worksheet' name='avg order value(cal)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{20B40AE7-F9CD-43C3-91CF-1B401F0D4858}' />
    </window>
    <window class='worksheet' name='aov sub category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{17415F4A-283E-4A6C-B086-56FD417B8EC0}' />
    </window>
    <window class='worksheet' name='Parameters'>
      <cards>
        <edge name='left'>
          <strip size='148'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF15FDA7-CE72-4164-8E32-98C2D69709A9}' />
    </window>
    <window class='worksheet' name='measures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.117ebsv0pkdn1i1cm8cmt061ybws].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B6ACF27-C3D1-40E6-8550-D1BEE7CDCC8B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Parameters' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='aov sub category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='category sales' width='192'>
      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
      XRMBEHTtfwFfFJazFctsQQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='dual axis 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAbZ0lEQVR4nO3deZgcd53f8fevqvq+Znp67vvQLVtYlmVbBmyDFwPG9rJOjPHiBS8s8DyB
      3ZBA8jx58jzrPMmzIfGSLDwkmwWy3jxewKxt1hhs1oCPNbZsbCQLWdJImtHcPffVd1dXV1X+
      GJ3WSJ7W3FO/1z+aGv1+Vb+p6k93dR3fErZt20iSQymrPQBJWk3LFgDLsshkMss1e0laEssW
      ANu2kXtXzpFPTfHKK6/SMzh69nfHjx3FPK/NQHcnr79+EOP0dHJmlrxhreg430lb1aVLG8Zo
      bxdpvDRUlfPa62+imgZDw32MjAzRvusmmmJuDr7dw92//1Em4n387nAnuUyBYPNmwsVJkrqg
      JuplbHycsqpmJsfHiFZXM9XXhVAEDVfdQHI0zvV7dy/puOV3AGlJ1G6+mve0hPnpz19gfGKS
      0ZFRhNvHzs11HD1ynOPdA1hWkaJR5OTJkySnRpjNq7S3NPHmbw/gdmsc6xpkc22Yw4cOU7f1
      GgZ7TpDIwW0f/hAHfvFj3GVVSz5u+QkgLQkjl6Y/Ps0N+65nOt5DUfFRHtLoHU3zgffuxqMp
      xPwuDr3dSVNrK/5wjKraGqbGh/nw7b9HoqByTbmP1w++wdU33YU+cpK9+25BT6dAuAmUVbC1
      rW7Jxy3OHAZNpVJLus9uWRa6ruPz+ZZsntLGlpqdZHQ6S0dbE+K835uFLFOpAlUVZUu+TLFc
      5wFM0ySXyxEMBpdj9pK0JOR3AMnRZAAkR5MBkBxNBkByNBkAydFkACRHkwGQHE2eCV4H8i/8
      F6xEfMHtvbf+B5SyxmUc0cYhA7AOmPEDWJNdC25vF9LLOJqNRe4CSY4mAyA5mgyA5GgyAJKj
      yQBIjiYDIDmaDIDkaDIAkqPJAEiOJgMgOVpJl0IUskm6+wbxhsohnyBrajRWhukbGqOxpRWj
      oKNn0jQ0Ny/XeCVpSZUUALc/jFuYGHoWRQkSUgrEJxPs3LmJU6dGGB06Scv2G8C2sSwL0zQp
      FovLNXbHKLVsgWma2HK9L0hJAcjnMtS1dHDi+Anc7iJFTNyaysxMAqG5qG9uJTk9gaiOoCgK
      qqqiafJ6u8USAkrJgKqqqHK9L0hJa8mlafQPDLJp6w4opMmZKrGIn8HhMdpa6jEKBrZVxJIl
      QaV1oqQAqC4Pbe0dcxO+KGcq/jQ1Nsz9v9cDeAAwzYv7S9JaI48CSY4mAyA5mgyA5GgyAJKj
      yQBIjiYDIDmaDIDkaDIAkqPJAEiOJgMgOZoMgORoMgCSo8kASI4mAyA5mgyA5GgyAJKjyQBI
      jiYDIDlaSbdEFgs5TvX0URarRU9NkDU1WmsrODUwTEtbG4auY+g5orHK5RqvJC2pkgIgFI3m
      5kZ6+kfIJSaI1rUwFB+lraWegYE42dQ4gWgjFTGwbBv7dHkUaZFKLDIg1/vClRQAu5inu2+E
      LZvagVZOdXZiu90IMff/lmVhn1fExi61oI00r5LXolztC1ZSALLpLNhFxienKGaTKIEwTdXl
      nOoZoqWtnUJ1Baaex7RBCIGiKCiK/JqxWKXWBRKKkOt9gUoKQDhWzc5Y9empqrO/3749DIDf
      6wbmfpZlUaT1QL5NSI4mAyA5mgyA5GgyAJKjyQBIjiYDIDmaDIDkaDIAkqPJAEiOJgMgOZoM
      gORoMgCSo8kASI4mAyA5mgyA5GgyAJKjyQBIjiYDIDlaSbdEOpU5dgxMfcHtlcptCJd3GUck
      LZWSAlDIJunuG8JSNMinyVkqDbEQY1MJKmobsIw8mWSKrdu3Ldd4V0Xu2a9izw4suL3/00+j
      RtuWcUTSUikpAG5fiKBXQ/MHyWT9RGyd6ZzJ1bu20d0VJ957hE3X3Qan69KYpkmxWFyusa+c
      EsuMWKaJvYR/d6nVZcwlXv5GVlIAZuKn6BtP0d5Shp4cYsZSaYyFOPy7Y1TUNNC24xoSw73U
      lO9AURRUVUXTNsBeliituaKqqEv4d5daFkVd4uVvZCWtpfKGDt7fMPdzfc25sii1Tec1apz7
      R5ZFkdYDeRRIcjQZAMnRZAAkR5MBkBxNBkByNBkAydFkACRHkwGQHE0GQHI0GQDJ0WQAJEeT
      AZAc7ZIXwxUKBQw9h8sfwq0uLifGsaexi7kFt3dtuxPh8i9qmZK0EJcMwFsHf8P46BhVTVu5
      fvfORS1E//U3sLNTCx9U2y0yANKKuGQAvMKkbetOfEH51Hdp47rkvs3Y+DjpfIapkaGVHI8k
      rahLBqC+vpHuI0epbpH3tkob17wBOHZwP2+f7EfV3OQy6ZUekyStmHm/A2zfvY+iWeR43wgF
      3VjpMUnSirnkl2CXv4yQZwzTOndzb1HPsP/1N9h70610vvUavvIaIi6LsekE0eoGrGKOdCLN
      9p3bV2TwkrRY8wagv7eHtrZWjh89Rlk0eq6xJ0BTfQ1gU14eZWx6BspCXL1r+2XLopRY1QOz
      aGKtpbIe67wsSrH7eezczIL7ax0fRPjKS1voOjVvAEbi/Zw4cojrbrudoe5eWqrfA4CeSTIw
      OETRFUFYc1sl7NM4fLiTWE0D7TuvJTnaR0359gvKoghKLOuhqShrqazHOi+Loh/4HtZ454L7
      u2t3oIaccfh73q20+9o9DE+mqQ24CZ+3O+MJhHn/rb93eqqO9jM/NZ7XuWGuboosiyKtB/MG
      wO0L0dIYAiC8osORpJUlL4aTHE0GQHI0GQDJ0WQAJEeTAZAcTQZAcjQZAMnRZAAkR5MBkBxN
      BkByNBkAydFkACRHW0PXHG9cRvfzoC/81lKt/VaEV16GuBJkAFZA4dVvYk33LLi9/4F/RJUB
      WBFyF0hyNBkAydHWxS5Q5vv3YmcmFtze/8kfooRqlnFE0kaxLgJgZ6dKCgC2vB9TWpiSAmAW
      shw49Da7rt3LYNcxsqZKY2WYgeEJ6ppbKBZ0cukULW2ympy0PpQUAMXlpTIawi7q2K4IZS6d
      4ZkMV121he5Twwz3d9K+633LUBaltDmY5hKXVVlkWRS7xLom7yxrstiyKKUv31rSsi5rWUkB
      sEyTbCZLVi+iZxPksQl6XQwPj6J6PDR1bGF2fJj6yi1LXBaltLokqrrEZVUWWRZFCLGosiaL
      LYtS+vKVJS3rspaVGIAiZbFarKJJR1sTuqUQDniYnJqlriJK0TSxLbPkdyxJWi0lBcDl8VFf
      X3922nv638rKGABuRQFcgKwLJK0Pzvick9Yt27YwfvdYSX3c77l/wW1lAKS1zTLRX/yLEjqI
      kgIgzwRLjiYDIDmaDIDkaDIAkqPJAEiOJgMgOZoMgORoMgCSo8kASI4mAyA5mgyA5GgyAJKj
      yQBIjiYDIDmaDIDkaDIADmTb8HxuN3+b+giWXeINzxvMFQdgfHiQE929WKZBX98ApmWRy+fJ
      pNNY8qbgNcu0BY9lPshJoxHD1nhFv2q1h7SqrjAANoNDQ8RiFfSfOkUk7OVU3xDD8X76hsZK
      LaIgrZCM5eHbyT/AIwp8MfQTHgj+ghdyuxktRld7aKvmym6JtGHHVbs4efwkLn+AcDjExGSa
      ocFemrdfhy3rAq25ukDjZhnfSd3Jrd632Oc5ghDgFzp/GPwlj6Q/zNcij6EJ63T/NVQXyCq9
      ukKxhLFf4T3BFvHBQXB7qYuFOXqsi8aWNsqiEfRsCouorAu0RuoC2bZNT7GeR5L7uD/4S7Zo
      g4jz/p4OLc5W1wA/y+7jbv8rCLG26gLZZum701oJY7+yv1KotG/ecnby6orq0z8FgQpAlkVZ
      C2wbXn17kKcGN/Gl8GNUqbMXtREC7vLv578lPsmOYi+bXPFVGOnqWbWjQNNmkN/p7bKI1jKx
      LJvHXzrKy4f7+Xf1L8z74j9DFRZ/HHyWH6RvI2N5VnCUq2/VAuARBi/rV/N36Y+Qsbzv3kFa
      MN0w+fY/vkEqq/PV+/YR8Kjv2qdGm+EW7yF+lPkAtoMOY6xaAAKKzr8KPUWrNsLDifs4XmiU
      nwZLYNYM8PUnj9BeV86DH70Gt/buL/4z3uc9TN5288aop+Qv7uvVqp4IU4TNLb5DfDH8E57K
      vo/Hs7dg2AvfYNKFhoox/mfyX3Lnzbu448bNKKK0d3JF2Hwq+Ese/8WbzKTyyzTKtWVNnAmu
      UWf4WuSH+EWeryfup2/KWO0hrSu2DYcLbXw3dSefDT3D7torn1dYyfLAvir++qk3MU1r6Qa5
      Rq2JAACowuYO3+t8KvBLvvfTgzz1ynGKa3gDWDYU7dVffZYNL+R382z2Bv51+HGatBKepHMJ
      uzqqqY2F+Plvujf8bunqb8HzCAGtrlH+4/3Xkkjr/MXf/5qxmYU/X3elJC0/f5O6i79M3EfK
      8q3aOIq2wmOZD9JlNPCVyOOUq0u3ru6/7Sr2Hx2kb3Rmyea5Fq2Nsx3v4HVr/NHtV3Okd5yH
      f7ifD6YbuEkbo8Rd2rPMkcPYRX3B7dXaqxDaxUem5nY12nkiezN3+F5DETbfSt7Dn4afJKTk
      rmxwVyhruflO6i6atDHuC72AIpb2rdrr1vjcHbv57k8P8ucP3ozHtSZfKou2Zv8qIQRXtVXz
      0IO38L1vH+RQqokHgs8RUbIlzyv37Fexk8MLbh948FlEWdOF87Dc/CjzAWatAF8J/wNRNY1t
      g4rFN5P/gi+Hn7yisV2JaTPE/0p9nA96D3Cj5+gVvzG8m9baMm7c2cgPfnmEz3xkF2K5FrSK
      1tQu0HyCPjefLfsV13uO8Y3EJ3hL71jR/VLbtjlpNPDfE/fTrI3y5fCPiZ7e1RACdrtPcofv
      Nb6VvIdZK7Ds4xkoVvHN5D3c4//nZX3xw9yb0Eeu7yA+meTwqbHlW9AqWrOfAOcT2FznOUG7
      Nsyj6Q9xuNDOvYEX8SmFZV1uwTB5/KVjdI528PnQ09Ro0xedIhIC3uPuRhEW30rcw5fDP8a/
      DGOxgaOFFp7I3MLnQs/QuARfdhdCUxW+ePcevv79V2ipLSMS2FgnLdf8J8D5omqKL4d/TKM2
      ztcTf8hBvWPZjsQMjCX480dewutW+Vrdi9TO8+I/QwjY5e7h44Ff863kPUzrS/++8mp+Jz/J
      vo8/DT+5Yi/+M2IRPx9/31b+7zNvYVkb67DQuvgEOJ8ibG71vsUOdx//lN3LU9n306KNsNfT
      yWbXIG6xuKvwirbC0/tP8fqgyefvvJbW2jIyPQu7mnOnqxc1YPHwE1v42gMVVJYtfpfIsmye
      Tl9Pt57n34R/tOyfevMxjj/LnsIkB0YSPP+LWW6uunwAtc0fRglWrdDoFmfdBQDm3nGr1Rk+
      HXqOgq3RZdTzhr6NJzK30KqNcHM8yxafidtV2lnlMbOMR9O302qHeOjB9+B1l7Z6hIBtrn4+
      ta+ah3+4n6/et4+q8isPQcEweeTnb1GYmuFL4X9CW2S4r3gcBx/FGnubey0vf7n/E7SGnqZa
      u/ThUbXmaljmABRsFRuBRyzuvoV1GYDzuUWRHe5+drj70W2Nk0YTLx3q5/+92MvW5hjv3dlE
      rS0uu69n2YJX9Z38KreHTwReYM9Nn0Yt8cV/hhCwo7WSB2NtPPzYfv7tJ24kdAXzyeYNvvnk
      b9hUH+X2xhMwvfrXlweUPPcFn+eR9Ef4WuQxVLGyJyotWzBqRtmv7+CtwmYsW1CjTtPmGqZD
      i9OsjeFVLryKwLZt9Jf+6yXnue4DcD6PKHKVu4cb7thG0VfD4Z4xnnuzm774x9iinOJ6zzHa
      tJELjpnPWgEeTX8Inyjw7yM/wK/oS3It5LbmSj53xzV847H9fMEWVL97l7Omkzn+x49f5va9
      7dy8q5ns3wvWyjnxzdoQm12D/Cx7I3f5X13Wo1BnTJlhfqNv40BhCwGR40bPUe6IvI5HGIyZ
      5fQU6+b2ALK3YCNo+8lv2dJYwaaGKHWxEMahH1xy3hsqAOdzu1T2bKnj2s21zMz+Z45MuvhV
      bg8jZpRtrgGu8xxnygrzs+yN3O1/ld3uk0u+Mbc0xfj8Xdfyv//uo3zB833qtOl37TNQrOJv
      nzrOZ+6+mZ1tVWvu2PvcDTSv8nDik7QaI2x19S/6e9d8ZlI5fnt8mP1HBimkPsZeTyd/Fn6C
      kMhesJ1qtWlqtWlu8h7BtkHHzcSuz3BycIrHnj/K2EyaYOJeWrUROlxxGtVxypT02Xls2ACc
      IYTALQyu8fRzjaebrOXhmNHCc7nrAPhKeGkvIXinTQ0VfLb2AP+n/26+EPop9drkJdseOX2Y
      80ufvpbW9lI+M1aWJiweDD3Lj9If4MnM+/GJAlXqDI3aOA3qBG05i0jRRFPVBb+p2DZk8wUO
      dY/xytsDJDJ59myp4/Mf20Xg0S8taD5CgBeD7S2VbG+pBMAomgz+1X+it1jLkUIrPy9ej267
      qNGmqVGnFx8A27YxTRNVVeeOlNj2mnvXOp9f0dnjOcEez4kVW2aLNspnQ938TepO/iT0s4sO
      Y9o2vKbv4MX8NXOHeSN3r9jYrlSNOsOfRZ7EsiFpBxg3yxgqVvFmYRvPPDdIhkkiAS8NVWGa
      qyO01JRRWxHEo9qcf0ytaAmO9E/z8qE+hkYnubq9mntv3U5zdRmKIrBNg/QiXk6aqlCpJqhU
      E+z1HAfmzuqPmBVMmGWLD8BI/ymmUlnC0WpsM086kWb7zu2Lne2G06yN8yehn/Hd1Mf4bOgZ
      mrVxYO5qzmdyN85d0Bb+B/yrcJhzMRQBZSJDmZJh8+n7if2//wCidhdTiSxDE0m6f/EdDk7m
      GTOjWAiiSpJGbZyc7aHTaKZDi/Ne71E6tDhKl0boo28t65h9SoE2ZYQ21wjCXuStP91d3bS1
      N9DdFSfee4RN191GXbkP0zTJZDIEAgHMgdewizqWZaEoylyVhNOlU+ab1pr3geo+O20OvA7F
      POZ57bHtd0yDaZmn+9+I0LyY5ty0Ofibuf6np898Ql1qWmu6AeHynes/9AYYufnbCwWhnD8t
      5vq7/ZimiRACK/5bMLJYpslwIcxf/2qAP75WoSEW5NF/7kep3cUf7cihWAYIgavpeoQ7gGXN
      ffW1hw9gFzJnpxVl7pjWpaZdjXsRnuB5/Q9iF9Il9N+D8ITP9R95C1tPLay/Da7GaxHeyHn9
      D2HrSSzLxrAVpilnMB/BNrLsjkzhEkUs0wQhUBQVre3mc/MWUOx9ecFjVxQFre2WC6aLPS9d
      sv2iAzAR7yM+MUNVXROmkSeTTNCxZRvCtsjlcgSDwcXMfkMamkjyV4+/TtDnZkdLJX9w8zZU
      ZV2dlN8wFh2ASzFNUwbgMkamUgyOJ7lua92a/s600ckASI4mP3clR5MBkBxNBkByNBkAydFk
      ACRHkwGQHE0GQHI0GQDJ0WQAJEeTAZAcTQZAcjQZAMnRZAAkRzt7R1gqlVrSx+JYloWu62dv
      PCiVbdvYtn32BoYrHYPsvz77n3ktXuml4gvtv2Yvh15sAGSA1nf/lQrAsu8CDfX3kjdKL5sh
      hEBRFHLpWeKjU/O2mZmeJJfNohcvnv+Z/u9kFnL0Dpx7Fq5R0DEu8SQaRVHo6nyb4ye60fMZ
      soULl5NJJShc5kHOiqIwMTpEZ2cnU7MXV57IZ9Pk9UtXNjszfj2bpLOzk8npGXLvaJ9KpS7b
      Pz07SWdnJ/Mt5nJ9ATALHDt6hN7BkUuXhrRMJqfnrxJnmwWOvH2Y4fGLt18+l79suUkhBAKT
      40eP0Dc4csl2xXyGnHHx9hNCnH7x20xNXrj82dlzj4xd5rIoNsmZSQpqEI+ZIme78Ng6huLD
      ZeVIGwK/ZmIofrzo5CwXHa1NF5TAGBsdJ1OEMpdO92iCiooq0pODGKofv2YSLovitmz6BvoI
      VFTTUB277Igmx0aZnsnR3Bjl8IEubDuN4a1i71Ud87bXjSKKnSCZ8GFrPk7EhwlHynHbOeKj
      E7S2tTM1MU5tdQU9wwliES/ZXJHNWztQgUQqQ3kkxOTkJJPDvdjuIOVehfHpJNGKcixL4PN7
      GY0PU9/aTnno4trSp3oH2bJtG8nJYY4d6SdWU4coJMhZLoJeF5l0gkyuiG1kcQWjNNfXnO3b
      Hx9l27btpGbGODk8Tk1dA6PxftyBMoJeF0Y+zfDoJLHqaqanZ/C7VQq42NTajF3MY6peyiMh
      ek4eI5s3CZdHqa8OMzyWJpuaJhyNkUimSU6NkiuqbN26GfX09jMLOYqohAJ+ers6MV0hFCOF
      4itjqOsIDa2byGWzRGI1TA/3oPjL2b65/dwfbplk8iY1jSHi8ThuG/Ia6JkCwsqTzRk01ETR
      RYGusWFa2zcR8rkvWn8TExNUxCoY7O0iY7qw80kGBwdpaKhf3k+AzOQQU3mFsZEh0vkCbU31
      ZHSTloYYfX1xDMPA7faQz2Zxud3k81msC/bIbEZHR5gdH2UmkaGhYwuZ5DQefxiPYmMDei5D
      OjFDxrAYjo++65jiI6PYuWlGphL4Q5U01tfS0tRwyfYCgcftIptOkM3lidW3Iqw8+YKguaGG
      wf5+ijYUskmCsToiAR+Wkb3gHVfVNCgmsbRyFENnMp1jS1OUkckkXaf6UPQZIg1b3r30uFBp
      7diElc+QSCQYig+TTCdJZ7I0tzTj9XrIZi98SMeZ1TkxMcPmre1Mjo4TilYhDJ1EOkl/bx9C
      WKQSKarrmgn4vOSyOeDMLgQIQHF5qYsFcLsU3jzYhWkkSeSKGIW5KhYFE8rcJpl3Pt9QCISd
      ZzaZZzgex+P2kMtmqaxpxKfkmMnOzSMQieJzzb+7IgQkkynSswmS6SzNLS0omoemqiCzyRQF
      NFwKZLKXeQqQZTCbyMyNwR+ita6Sk0ePoj700EMPXX6tXxnbtplN59ixfStBrxu/x8XYVIry
      kJuJ2TyV0QCoXrwugSVc+N0KRVvF61KwzCK6KXAJA3+khvbWepKTEwxOTNPc1EK89wShilqi
      kRA+fwCPd26jxWIxbKuIrut4vfO9mGzc3gDtHe0YBZ1QMEQo5GdkdJxYtGzevyMxPYEhfNTV
      VuL2BvB6PHhdGhoGsxmD1uYG0pksscoq/IEgwtTJ6CaVsQoUAaahMzk9S0VNM8KYRfWXURXx
      0z+epr2lnsaGWnTbTWZyCNXtoVAsks/reD3nntgeDnrp6u7BHy7H7/fh0jTMok4wEqUyGiUY
      DOH3+UgnZ1HcPsrC56qR+twKPX0D1NbX0d83RGNTHb2nuojVNlIWDFAZKyeVM6iqriLg92Hk
      MxRshYryMkAwNTFOEZXySBifz4cvVIGwizQ11JNJJYlEYwT8PlzCJIuXsBss2yJfnKvO5w+E
      CAcDpJJJItEKXKqN4vIRi/jIFV1oGJRFYwR8Xnw+H4auY5oGluJCUwUer5/ysjCFbJK0YVNd
      U0XI70MIgc/nQ/P4cLvcZNIpyqPlFHSdfD53wfZPTE+QzJu4FJtAuJyI38XYTIZt27fw/wFr
      qJfLRA9dmAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='measures' width='192'>
      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
    </thumbnail>
    <thumbnail height='171' name='sales/profit by states' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='subcategory sales' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
